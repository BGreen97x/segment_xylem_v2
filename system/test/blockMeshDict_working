/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1e-3;

//---------------------------------------------------------------------------//
// Zelleneinstellungen

//Kapillaren
xcells 20;
ycells 200;
zcells 1;

//Tüpfel
xcells2 20;
ycells2 50;
zcells2 1;

//---------------------------------------------------------------------------//
//Geometriedefinition

length_capillary      1; 
thickness_capillary 0.25; //max 0.5/0.7

length_pit 0.25;
width_interface_pit 0.1; 


//---------------------------------------------------------------------------//
//Berechnung Koordinaten

//Block 1: Kapillare unten
xPosMin 0;
xPos #calc "$xPosMin + $thickness_capillary";

yPosMin 0;
yPos #calc "$yPosMin + $length_capillary";

zPos    0.2;
zPosMin 0;

//Block 2: Kapillare oben
yPosMin2 #calc "$yPos + 2*$length_pit";
yPos2    #calc "$yPosMin2 + $length_capillary";

//Block 3: Tüpfel 
xPosMin3 #calc "0.5*($thickness_capillary - $width_interface_pit)";
xPos3    #calc "$xPosMin + $xPosMin3 + $width_interface_pit";

yPos3 #calc "$yPos + $length_pit";

//---------------------------------------------------------------------------//
vertices
(
//H=Hinten, V=Vorne, U=Unten, O=Oben, R=Rechts, L=Links

//Block 1: Kapillare unten
    ($xPosMin 		$yPosMin	    $zPosMin) 	//V0 H-U-L
    ($xPos			$yPosMin		$zPosMin) 	//V1 H-U-R
    ($xPos 			$yPos 	        $zPosMin) 	//V2 H-O-R
    ($xPosMin		$yPos   		$zPosMin) 	//V3 H-O-L
	
    ($xPosMin		$yPosMin		$zPos)   	//V4 V-U-L
    ($xPos 			$yPosMin		$zPos) 	    //V5 V-U-R
    ($xPos 			$yPos  		    $zPos) 	    //V6 V-O-R
    ($xPosMin		$yPos    		$zPos) 	    //V7 V-O-L

//Block 2: Kapillare oben
    ($xPosMin 		$yPosMin2	    $zPosMin) 	//V8 H-U-L
    ($xPos			$yPosMin2		$zPosMin) 	//V9 H-U-R
    ($xPos 			$yPos2 	        $zPosMin) 	//V10 H-O-R
    ($xPosMin		$yPos2   		$zPosMin) 	//V11 H-O-L
	
    ($xPosMin		$yPosMin2		$zPos)   	//V12 V-U-L
    ($xPos 			$yPosMin2		$zPos) 	    //V13 V-U-R
    ($xPos 			$yPos2  		$zPos) 	    //V14 V-O-R
    ($xPosMin		$yPos2    		$zPos) 	    //V15 V-O-L

//Block 3: Tüpfel unten
    ($xPosMin		$yPos   		$zPosMin)  	//V16 H-U-L = V3
    ($xPos 			$yPos 	        $zPosMin) 	//V17 H-U-R = V2
    ($xPos3 		$yPos3 	        $zPosMin) 	//V18 H-O-R
    ($xPosMin3		$yPos3   		$zPosMin) 	//V19 H-O-L
	
    ($xPosMin		$yPos    		$zPos)  	//V20 V-U-L = V7
    ($xPos 			$yPos  		    $zPos) 	    //V21 V-U-R = V6
    ($xPos3 		$yPos3  		$zPos) 	    //V22 V-O-R
    ($xPosMin3		$yPos3    		$zPos) 	    //V23 V-O-L


//Block 4: Tüpfel oben
    ($xPosMin3 		$yPos3	        $zPosMin) 	//V24 H-U-L
    ($xPos3			$yPos3		    $zPosMin)   //V25 H-U-R
    ($xPos			$yPosMin2		$zPosMin) 	//V26 H-O-R = V9
    ($xPosMin 		$yPosMin2	    $zPosMin)  	//V27 H-O-L = V8
	
    ($xPosMin3	    $yPos3		    $zPos)      //V28 V-U-L
    ($xPos3 		$yPos3		    $zPos) 	    //V29 V-U-R
    ($xPos 			$yPosMin2		$zPos)	    //V30 V-O-R = V13
    ($xPosMin		$yPosMin2		$zPos) 	    //V21 V-O-L = V12
);


//---------------------------------------------------------------------------//
blocks
(
    //Block 1: Kapillare unten
    hex (0 1 2 3 4 5 6 7) ($xcells $ycells $zcells) simpleGrading (1 1 1)

    //Block 2: Kapillare oben
    hex (8 9 10 11 12 13 14 15) ($xcells $ycells $zcells) simpleGrading (1 1 1)

    //Block 3: Tüpfel unten
    // hex (16 17 18 19 20 21 22 23) ($xcells $ycells $zcells) simpleGrading (1 1 1)
    hex (3 2 18 19 7 6 22 23) ($xcells2 $ycells2 $zcells2) simpleGrading (1 1 1)

    //Block 4: Tüpfel oben
    // hex (24 25 26 27 28 29 30 31) ($xcells $ycells $zcells) simpleGrading (1 1 1)
    hex (24 25 9 8 28 29 13 12) ($xcells2 $ycells2 $zcells2) simpleGrading (1 1 1)
);

//---------------------------------------------------------------------------//
edges
(
);


//---------------------------------------------------------------------------//
boundary
(
    inlet
    {
        type patch;
        faces
        (
            (1 5 4 0)
        );
    }
    // atmosphere
    // {
    //     type patch;
    //     faces
    //     (
    //         (3 7 6 2)
    //     );
    // }
    // walls
    // {
    //     type wall;
    //     faces
    //     (
    //         (0 4 7 3)
    //         (2 6 5 1)
    //     );
    // }
    // frontAndBack
    // {
    //     type empty;
    //     faces
    //     (
    //         (0 3 2 1)
    //         (4 5 6 7)
    //     );
    // }
);


//---------------------------------------------------------------------------//
mergePatchPairs
(
);


// ************************************************************************* //
